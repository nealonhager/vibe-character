"""Add Relationship model and link to Character

Revision ID: 58addbb015ee
Revises: 7d69bb6c31b0
Create Date: 2025-05-03 15:44:50.200889

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "58addbb015ee"
down_revision = "7d69bb6c31b0"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "relationship",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("character1_id", sa.UUID(), nullable=False),
        sa.Column("character2_id", sa.UUID(), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "FAMILY",
                "ROMANTIC",
                "FRIENDSHIP",
                "RIVALRY",
                "PROFESSIONAL",
                "ACQUAINTANCE",
                name="relationshiptype",
            ),
            nullable=False,
        ),
        sa.Column(
            "status",
            sa.Enum(
                "EXCELLENT",
                "GOOD",
                "NEUTRAL",
                "BAD",
                "TERRIBLE",
                "ENEMY",
                name="relationshipstatus",
            ),
            nullable=False,
        ),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.CheckConstraint(
            "character1_id != character2_id", name="ck_relationship_not_self"
        ),
        sa.ForeignKeyConstraint(
            ["character1_id"], ["character.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["character2_id"], ["character.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("relationship", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_relationship_character1_id"), ["character1_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_relationship_character2_id"), ["character2_id"], unique=False
        )

    with op.batch_alter_table("character", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False
        )
        batch_op.alter_column(
            "mother_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "father_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=True,
        )

    with op.batch_alter_table("character_siblings", schema=None) as batch_op:
        batch_op.alter_column(
            "character_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "sibling_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )

    with op.batch_alter_table("event_characters", schema=None) as batch_op:
        batch_op.alter_column(
            "character_id",
            existing_type=sa.NUMERIC(),
            type_=sa.UUID(),
            existing_nullable=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("event_characters", schema=None) as batch_op:
        batch_op.alter_column(
            "character_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("character_siblings", schema=None) as batch_op:
        batch_op.alter_column(
            "sibling_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "character_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=False,
        )

    with op.batch_alter_table("character", schema=None) as batch_op:
        batch_op.alter_column(
            "father_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "mother_id",
            existing_type=sa.UUID(),
            type_=sa.NUMERIC(),
            existing_nullable=True,
        )
        batch_op.alter_column(
            "id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False
        )

    with op.batch_alter_table("relationship", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_relationship_character2_id"))
        batch_op.drop_index(batch_op.f("ix_relationship_character1_id"))

    op.drop_table("relationship")
    # ### end Alembic commands ###
